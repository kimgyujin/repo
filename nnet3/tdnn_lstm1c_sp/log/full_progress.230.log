# nnet3-show-progress --use-gpu=no --verbose=2 exp/nnet3/tdnn_lstm1c_sp/229.mdl exp/nnet3/tdnn_lstm1c_sp/230.mdl 
# Started at Thu Jul 30 11:32:00 KST 2020
#
nnet3-show-progress --use-gpu=no --verbose=2 exp/nnet3/tdnn_lstm1c_sp/229.mdl exp/nnet3/tdnn_lstm1c_sp/230.mdl 
LOG (nnet3-show-progress[5.5.0-]:SelectGpuId():cu-device.cc:153) Manually selected to compute on CPU.
WARNING (nnet3-show-progress[5.5.0-]:Check():nnet-nnet.cc:789) Node lda.delayed is never used to compute any output.
WARNING (nnet3-show-progress[5.5.0-]:Check():nnet-nnet.cc:789) Node lda.delayed is never used to compute any output.
WARNING (nnet3-show-progress[5.5.0-]:Check():nnet-nnet.cc:789) Node lda.delayed is never used to compute any output.
VLOG[1] (nnet3-show-progress[5.5.0-]:main():nnet3-show-progress.cc:136) Printing info for the difference between the neural nets: left-context: 10
right-context: 20
num-parameters: 8426364
modulus: 1
component-node name=lda.delayed component=lda.delayed input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2), ReplaceIndex(ivector, t, 0)) input-dim=300 output-dim=300
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2), ReplaceIndex(ivector, t, 0)) input-dim=300 output-dim=300
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=300 output-dim=520
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=520 output-dim=520
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=520 output-dim=520
component-node name=tdnn2.affine component=tdnn2.affine input=Append(Offset(tdnn1.batchnorm, -1), tdnn1.batchnorm, Offset(tdnn1.batchnorm, 1)) input-dim=1560 output-dim=520
component-node name=tdnn2.relu component=tdnn2.relu input=tdnn2.affine input-dim=520 output-dim=520
component-node name=tdnn2.batchnorm component=tdnn2.batchnorm input=tdnn2.relu input-dim=520 output-dim=520
component-node name=lstm1.W_all component=lstm1.W_all input=Append(tdnn2.batchnorm, IfDefined(Offset(lstm1.r_trunc, -3))) input-dim=650 output-dim=2080
component-node name=lstm1.dropout_mask component=lstm1.dropout_mask input=lstm1.dropout_mask input-dim=3 output-dim=3
component-node name=lstm1.lstm_nonlin component=lstm1.lstm_nonlin input=Append(lstm1.W_all, IfDefined(Offset(lstm1.c_trunc, -3)), lstm1.dropout_mask) input-dim=2603 output-dim=1040
dim-range-node name=lstm1.c input-node=lstm1.lstm_nonlin dim-offset=0 dim=520
dim-range-node name=lstm1.m input-node=lstm1.lstm_nonlin dim-offset=520 dim=520
component-node name=lstm1.rp component=lstm1.W_rp input=lstm1.m input-dim=520 output-dim=260
dim-range-node name=lstm1.r input-node=lstm1.rp dim-offset=0 dim=130
component-node name=lstm1.cr_trunc component=lstm1.cr_trunc input=Append(lstm1.c, lstm1.r) input-dim=650 output-dim=650
dim-range-node name=lstm1.c_trunc input-node=lstm1.cr_trunc dim-offset=0 dim=520
dim-range-node name=lstm1.r_trunc input-node=lstm1.cr_trunc dim-offset=520 dim=130
component-node name=tdnn3.affine component=tdnn3.affine input=Append(Offset(lstm1.rp, -3), lstm1.rp, Offset(lstm1.rp, 3)) input-dim=780 output-dim=520
component-node name=tdnn3.relu component=tdnn3.relu input=tdnn3.affine input-dim=520 output-dim=520
component-node name=tdnn3.batchnorm component=tdnn3.batchnorm input=tdnn3.relu input-dim=520 output-dim=520
component-node name=tdnn4.affine component=tdnn4.affine input=Append(Offset(tdnn3.batchnorm, -3), tdnn3.batchnorm, Offset(tdnn3.batchnorm, 3)) input-dim=1560 output-dim=520
component-node name=tdnn4.relu component=tdnn4.relu input=tdnn4.affine input-dim=520 output-dim=520
component-node name=tdnn4.batchnorm component=tdnn4.batchnorm input=tdnn4.relu input-dim=520 output-dim=520
component-node name=lstm2.W_all component=lstm2.W_all input=Append(tdnn4.batchnorm, IfDefined(Offset(lstm2.r_trunc, -3))) input-dim=650 output-dim=2080
component-node name=lstm2.dropout_mask component=lstm2.dropout_mask input=lstm2.dropout_mask input-dim=3 output-dim=3
component-node name=lstm2.lstm_nonlin component=lstm2.lstm_nonlin input=Append(lstm2.W_all, IfDefined(Offset(lstm2.c_trunc, -3)), lstm2.dropout_mask) input-dim=2603 output-dim=1040
dim-range-node name=lstm2.c input-node=lstm2.lstm_nonlin dim-offset=0 dim=520
dim-range-node name=lstm2.m input-node=lstm2.lstm_nonlin dim-offset=520 dim=520
component-node name=lstm2.rp component=lstm2.W_rp input=lstm2.m input-dim=520 output-dim=260
dim-range-node name=lstm2.r input-node=lstm2.rp dim-offset=0 dim=130
component-node name=lstm2.cr_trunc component=lstm2.cr_trunc input=Append(lstm2.c, lstm2.r) input-dim=650 output-dim=650
dim-range-node name=lstm2.c_trunc input-node=lstm2.cr_trunc dim-offset=0 dim=520
dim-range-node name=lstm2.r_trunc input-node=lstm2.cr_trunc dim-offset=520 dim=130
component-node name=tdnn5.affine component=tdnn5.affine input=Append(Offset(lstm2.rp, -3), lstm2.rp, Offset(lstm2.rp, 3)) input-dim=780 output-dim=520
component-node name=tdnn5.relu component=tdnn5.relu input=tdnn5.affine input-dim=520 output-dim=520
component-node name=tdnn5.batchnorm component=tdnn5.batchnorm input=tdnn5.relu input-dim=520 output-dim=520
component-node name=tdnn6.affine component=tdnn6.affine input=Append(Offset(tdnn5.batchnorm, -3), tdnn5.batchnorm, Offset(tdnn5.batchnorm, 3)) input-dim=1560 output-dim=520
component-node name=tdnn6.relu component=tdnn6.relu input=tdnn6.affine input-dim=520 output-dim=520
component-node name=tdnn6.batchnorm component=tdnn6.batchnorm input=tdnn6.relu input-dim=520 output-dim=520
component-node name=lstm3.W_all component=lstm3.W_all input=Append(tdnn6.batchnorm, IfDefined(Offset(lstm3.r_trunc, -3))) input-dim=650 output-dim=2080
component-node name=lstm3.dropout_mask component=lstm3.dropout_mask input=lstm3.dropout_mask input-dim=3 output-dim=3
component-node name=lstm3.lstm_nonlin component=lstm3.lstm_nonlin input=Append(lstm3.W_all, IfDefined(Offset(lstm3.c_trunc, -3)), lstm3.dropout_mask) input-dim=2603 output-dim=1040
dim-range-node name=lstm3.c input-node=lstm3.lstm_nonlin dim-offset=0 dim=520
dim-range-node name=lstm3.m input-node=lstm3.lstm_nonlin dim-offset=520 dim=520
component-node name=lstm3.rp component=lstm3.W_rp input=lstm3.m input-dim=520 output-dim=260
dim-range-node name=lstm3.r input-node=lstm3.rp dim-offset=0 dim=130
component-node name=lstm3.cr_trunc component=lstm3.cr_trunc input=Append(lstm3.c, lstm3.r) input-dim=650 output-dim=650
dim-range-node name=lstm3.c_trunc input-node=lstm3.cr_trunc dim-offset=0 dim=520
dim-range-node name=lstm3.r_trunc input-node=lstm3.cr_trunc dim-offset=520 dim=130
component-node name=output.affine component=output.affine input=lstm3.rp input-dim=260 output-dim=2104
component-node name=output.log-softmax component=output.log-softmax input=output.affine input-dim=2104 output-dim=2104
output-node name=output input=Offset(output.log-softmax, 5) dim=2104 objective=linear
component name=lda.delayed type=NoOpComponent, dim=300
component name=lda type=FixedAffineComponent, input-dim=300, output-dim=300, linear-params-rms=0.006709, bias-{mean,stddev}=-0.01975,0.4295
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=300, output-dim=520, learning-rate=0.00014557, l2-regularize=0.05, max-change=0.75, linear-params-rms=0.01477, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.005,0.006,0.008 0.01,0.07,0.26,0.31,0.33 0.36,0.39,0.42,0.56), mean=0.228, stddev=0.115], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.08,0.08 0.09,0.11,0.31,0.41,0.49 0.60,0.69,0.70,0.85), mean=0.295, stddev=0.162], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.02,0.02 0.03,0.05,0.17,0.43,0.59 0.72,0.84,0.92,1.1), mean=0.248, stddev=0.228], bias-{mean,stddev}=-0.0002304,0.0185, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=520, self-repair-scale=1e-05
component name=tdnn1.batchnorm type=BatchNormComponent, dim=520, block-dim=520, epsilon=0.001, target-rms=1, count=-3512.53, test-mode=false
component name=tdnn2.affine type=NaturalGradientAffineComponent, input-dim=1560, output-dim=520, learning-rate=0.00014557, l2-regularize=0.05, max-change=0.75, linear-params-rms=0.00626, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.20,0.20,0.21 0.22,0.23,0.25,0.26,0.27 0.28,0.29,0.30,0.34), mean=0.246, stddev=0.0221], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.003,0.004 0.007,0.04,0.15,0.17,0.19 0.20,0.21,0.23,0.25), mean=0.128, stddev=0.0641], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.03,0.03,0.04 0.05,0.06,0.14,0.30,0.43 0.53,0.63,0.67,0.76), mean=0.192, stddev=0.156], bias-{mean,stddev}=0.0006278,0.01025, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn2.relu type=RectifiedLinearComponent, dim=520, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.08,0.14,0.17 0.19,0.21,0.23,0.29), mean=0.0781, stddev=0.0681], oderiv-count=18752
component name=tdnn2.batchnorm type=BatchNormComponent, dim=520, block-dim=520, epsilon=0.001, target-rms=1, count=-3460.11, test-mode=false
component name=lstm1.W_all type=NaturalGradientAffineComponent, input-dim=650, output-dim=2080, learning-rate=0.00014557, l2-regularize=0.01, max-change=1.5, linear-params-rms=0.003738, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-08,1e-06,4e-06,3e-05 0.0005,0.03,0.08,0.12,0.15 0.17,0.20,0.21,0.26), mean=0.0784, stddev=0.0541], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.04,0.04,0.04 0.05,0.07,0.18,0.20,0.21 0.22,0.23,0.23,0.26), mean=0.16, stddev=0.0581], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(8e-08,9e-08,9e-08,1e-07 2e-07,0.04,0.09,0.19,0.28 0.38,0.49,0.54,0.64), mean=0.122, stddev=0.12], bias-{mean,stddev}=-4.29e-05,0.00126, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=lstm1.lstm_nonlin type=LstmNonlinearityComponent, input-dim=2603, output-dim=1040, learning-rate=0.00014557, l2-regularize=0.01, max-change=0.75, cell-dim=520, use-dropout=true, w_ic-rms=0.0012, w_fc-rms=0.001672, w_oc-rms=0.002921, count=3.66e+03, i_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-0.000972206, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-4.6,-1.9,-1.5,-1.0 -0.53,-0.009,0.50,1.1,1.6 2.0,2.4,2.7,4.3), mean=0.513, stddev=0.888], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.5,-1.1,-0.90,-0.57 -0.31,-0.09,0.23,0.38,0.62 0.86,1.1,1.4,2.1), mean=0.169, stddev=0.433] }, f_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-0.000972206, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-4.9,-1.2,-0.95,-0.75 -0.45,-0.07,0.49,0.88,1.4 2.0,2.6,3.9,6.2), mean=0.489, stddev=0.889], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.3,-0.84,-0.74,-0.44 -0.20,-0.008,0.23,0.32,0.46 0.63,0.74,0.79,1.2), mean=0.161, stddev=0.312] }, c_t_tanh={ self-repair-lower-threshold=0.2, self-repair-scale=1e-05, self-repaired-proportion=0.527683, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-18,-13,-11,-8.0 -6.1,-3.9,-0.0006,4.4,6.8 9.6,12,13,18), mean=0.208, stddev=5.26], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-14,-11,-9.6,-8.0 -6.3,-4.1,-0.43,1.7,3.8 5.5,7.7,8.3,11), mean=-0.882, stddev=4.04] }, o_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-0.000972206, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-3.7,-2.2,-1.8,-1.2 -0.84,-0.28,0.46,0.83,1.3 1.9,2.3,2.6,4.3), mean=0.318, stddev=0.918], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.5,-1.1,-0.93,-0.75 -0.46,-0.22,0.21,0.43,0.66 0.83,1.3,1.4,1.9), mean=0.131, stddev=0.47] }, m_t_tanh={ self-repair-lower-threshold=0.2, self-repair-scale=1e-05, self-repaired-proportion=-0.000972206, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-9.3,-8.1,-7.1,-5.6 -4.2,-2.5,-0.001,2.6,4.7 6.2,7.4,8.6,9.5), mean=0.094, stddev=3.42], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-8.8,-6.3,-5.1,-3.8 -2.4,-1.2,0.41,1.4,2.2 2.8,3.6,4.0,8.7), mean=0.0813, stddev=1.99] }
component name=lstm1.cr_trunc type=BackpropTruncationComponent, dim=650, scale=0.85, count=5.18e+03, recurrence-interval=3, clipping-threshold=30, clipped-proportion=-0.000385802, zeroing-threshold=15, zeroing-interval=20, zeroed-proportion=-0.002574, count-zeroing-boundaries=777
component name=lstm1.dropout_mask type=DropoutMaskComponent, output-dim=3, dropout-proportion=0.11405
component name=lstm1.W_rp type=NaturalGradientAffineComponent, input-dim=520, output-dim=260, learning-rate=0.00014557, l2-regularize=0.01, max-change=1.5, linear-params-rms=0.004896, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.03,0.03,0.04 0.04,0.05,0.10,0.15,0.16 0.17,0.17,0.18,0.19), mean=0.101, stddev=0.0476], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(9e-05,0.0002,0.0004,0.0007 0.003,0.05,0.08,0.10,0.11 0.12,0.13,0.13,0.14), mean=0.071, stddev=0.0345], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-08,4e-08,4e-08,5e-08 7e-08,1e-07,4e-07,0.02,0.23 0.29,0.36,0.39,0.44), mean=0.0457, stddev=0.102], bias-{mean,stddev}=0.0004185,0.007596, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.affine type=NaturalGradientAffineComponent, input-dim=780, output-dim=520, learning-rate=0.00014557, l2-regularize=0.05, max-change=0.75, linear-params-rms=0.005945, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.11,0.12,0.12 0.13,0.14,0.16,0.19,0.20 0.22,0.23,0.23,0.27), mean=0.164, stddev=0.0283], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.04,0.04,0.04 0.05,0.06,0.12,0.19,0.20 0.20,0.22,0.22,0.24), mean=0.121, stddev=0.0613], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-08,4e-08,4e-08,5e-08 8e-08,1e-07,1e-05,0.16,0.32 0.43,0.51,0.55,0.64), mean=0.0772, stddev=0.147], bias-{mean,stddev}=0.0002614,0.006645, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.relu type=RectifiedLinearComponent, dim=520, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.13,0.26,0.32 0.41,0.52,0.58,1.1), mean=0.15, stddev=0.153], oderiv-count=40832
component name=tdnn3.batchnorm type=BatchNormComponent, dim=520, block-dim=520, epsilon=0.001, target-rms=1, count=-3302.82, test-mode=false
component name=tdnn4.affine type=NaturalGradientAffineComponent, input-dim=1560, output-dim=520, learning-rate=0.00014557, l2-regularize=0.05, max-change=0.75, linear-params-rms=0.004588, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.15,0.15,0.16 0.16,0.17,0.18,0.19,0.20 0.20,0.21,0.21,0.23), mean=0.181, stddev=0.0135], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.07,0.07,0.08 0.08,0.09,0.10,0.12,0.12 0.13,0.14,0.15,0.17), mean=0.103, stddev=0.0161], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.04,0.04,0.05 0.06,0.07,0.12,0.22,0.30 0.37,0.44,0.46,0.51), mean=0.151, stddev=0.101], bias-{mean,stddev}=-0.0003454,0.00543, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn4.relu type=RectifiedLinearComponent, dim=520, self-repair-scale=1e-05, count=1e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.10,0.12,0.14 0.17,0.20,0.26,0.33,0.37 0.40,0.43,0.46,0.61), mean=0.269, stddev=0.0791], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.09,0.14,0.20 0.26,0.34,0.45,0.55,0.59 0.64,0.69,0.72,0.80), mean=0.438, stddev=0.13]
component name=tdnn4.batchnorm type=BatchNormComponent, dim=520, block-dim=520, epsilon=0.001, target-rms=1, count=-3145.53, test-mode=false
component name=lstm2.W_all type=NaturalGradientAffineComponent, input-dim=650, output-dim=2080, learning-rate=0.00014557, l2-regularize=0.01, max-change=1.5, linear-params-rms=0.00261, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-08,8e-08,1e-07,3e-07 1e-06,3e-05,0.05,0.09,0.12 0.13,0.15,0.15,0.20), mean=0.0485, stddev=0.0455], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.03,0.03 0.04,0.10,0.13,0.14,0.15 0.15,0.16,0.16,0.18), mean=0.113, stddev=0.0382], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-08,8e-08,8e-08,1e-07 4e-06,0.02,0.06,0.13,0.19 0.26,0.36,0.39,0.46), mean=0.0826, stddev=0.0857], bias-{mean,stddev}=-0.000167,0.003097, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=lstm2.lstm_nonlin type=LstmNonlinearityComponent, input-dim=2603, output-dim=1040, learning-rate=0.00014557, l2-regularize=0.01, max-change=0.75, cell-dim=520, use-dropout=true, w_ic-rms=0.0006955, w_fc-rms=0.0006964, w_oc-rms=0.001149, count=3.29e+03, i_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-0.000996865, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-3.2,-2.1,-1.7,-1.2 -0.64,-0.08,0.50,0.96,1.5 1.9,2.4,2.8,3.7), mean=0.461, stddev=0.888], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.2,-0.63,-0.49,-0.32 -0.17,0.04,0.25,0.36,0.50 0.60,0.74,0.79,1.0), mean=0.205, stddev=0.268] }, f_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-0.000996865, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-3.4,-2.3,-1.8,-1.3 -0.87,-0.23,0.50,0.64,1.1 1.5,2.1,2.5,3.0), mean=0.294, stddev=0.837], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.50,-0.31,-0.28,-0.15 -0.03,0.12,0.25,0.30,0.38 0.49,0.59,0.70,1.1), mean=0.218, stddev=0.182] }, c_t_tanh={ self-repair-lower-threshold=0.2, self-repair-scale=1e-05, self-repaired-proportion=0.000927666, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-18,-13,-12,-9.3 -6.7,-3.5,0.001,3.1,6.5 9.4,12,13,18), mean=-0.0133, stddev=5.13], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-12,-7.6,-7.2,-5.7 -4.4,-2.6,1.0,1.3,2.7 4.4,6.0,8.1,14), mean=-0.0409, stddev=3.12] }, o_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-0.000996865, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.9,-2.2,-1.8,-1.3 -0.85,-0.23,0.50,1.1,1.6 2.1,2.6,3.0,5.9), mean=0.443, stddev=0.987], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.4,-0.75,-0.58,-0.34 -0.15,0.05,0.25,0.35,0.52 0.67,0.81,0.88,1.3), mean=0.211, stddev=0.296] }, m_t_tanh={ self-repair-lower-threshold=0.2, self-repair-scale=1e-05, self-repaired-proportion=-0.000996865, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-11,-9.2,-7.5,-6.0 -4.3,-2.1,-0.005,1.8,4.5 6.2,7.8,8.9,11), mean=-0.0176, stddev=3.37], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-5.9,-3.9,-3.0,-2.2 -1.3,-0.19,1.0,1.3,2.0 2.7,4.2,5.0,9.0), mean=0.661, stddev=1.53] }
component name=lstm2.cr_trunc type=BackpropTruncationComponent, dim=650, scale=0.85, count=4.42e+03, recurrence-interval=3, clipping-threshold=30, clipped-proportion=-0.000226449, zeroing-threshold=15, zeroing-interval=20, zeroed-proportion=-0.00298954, count-zeroing-boundaries=669
component name=lstm2.dropout_mask type=DropoutMaskComponent, output-dim=3, dropout-proportion=0.11405
component name=lstm2.W_rp type=NaturalGradientAffineComponent, input-dim=520, output-dim=260, learning-rate=0.00014557, l2-regularize=0.01, max-change=1.5, linear-params-rms=0.003426, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.04,0.04,0.05 0.05,0.05,0.07,0.10,0.10 0.11,0.11,0.12,0.12), mean=0.0746, stddev=0.0234], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-05,7e-05,9e-05,0.0001 0.0002,0.0006,0.06,0.07,0.08 0.09,0.09,0.10,0.11), mean=0.0438, stddev=0.0337], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-08,3e-08,4e-08,5e-08 7e-08,1e-07,1e-06,0.09,0.16 0.20,0.22,0.24,0.26), mean=0.0369, stddev=0.0689], bias-{mean,stddev}=0.0001814,0.004625, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.affine type=NaturalGradientAffineComponent, input-dim=780, output-dim=520, learning-rate=0.00014557, l2-regularize=0.05, max-change=0.75, linear-params-rms=0.00466, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.09,0.09,0.10 0.10,0.11,0.13,0.14,0.16 0.17,0.18,0.19,0.21), mean=0.128, stddev=0.0216], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.05,0.06 0.06,0.07,0.10,0.14,0.14 0.15,0.16,0.16,0.17), mean=0.101, stddev=0.0335], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-08,4e-08,5e-08,6e-08 8e-08,1e-07,0.0008,0.14,0.24 0.33,0.40,0.44,0.51), mean=0.0668, stddev=0.112], bias-{mean,stddev}=-0.0003858,0.003745, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.relu type=RectifiedLinearComponent, dim=520, self-repair-scale=1e-05, count=3.89e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.35,-0.22,-0.17,-0.13 -0.09,-0.04,0.05,0.14,0.20 0.26,0.30,0.31,0.35), mean=0.0547, stddev=0.113], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.6,-1.1,-0.90,-0.73 -0.42,-0.07,0.42,0.93,1.2 1.4,1.6,1.7,2.5), mean=0.42, stddev=0.628], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0.03,0.10,0.17,0.22,0.26 0.31,0.35,0.42,0.54), mean=0.163, stddev=0.0889], oderiv-count=119168
component name=tdnn5.batchnorm type=BatchNormComponent, dim=520, block-dim=520, epsilon=0.001, target-rms=1, count=-2988.25, test-mode=false
component name=tdnn6.affine type=NaturalGradientAffineComponent, input-dim=1560, output-dim=520, learning-rate=0.00014557, l2-regularize=0.05, max-change=0.75, linear-params-rms=0.003702, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.12 0.13,0.13,0.15,0.16,0.17 0.17,0.17,0.18,0.19), mean=0.145, stddev=0.0161], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.06,0.07 0.07,0.07,0.08,0.09,0.10 0.11,0.11,0.12,0.13), mean=0.0835, stddev=0.0124], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.03,0.03,0.04 0.04,0.05,0.09,0.18,0.24 0.30,0.36,0.39,0.44), mean=0.119, stddev=0.0849], bias-{mean,stddev}=-0.0004175,0.004472, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn6.relu type=RectifiedLinearComponent, dim=520, self-repair-scale=1e-05, count=2.11e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.1,-0.76,-0.64,-0.41 -0.22,-0.05,0.26,0.56,0.70 0.83,1.0,1.2,1.7), mean=0.253, stddev=0.394], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.2,-0.81,-0.75,-0.50 -0.27,0.01,0.46,0.84,1.1 1.3,1.5,1.6,2.5), mean=0.439, stddev=0.534], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.08,0.12,0.14 0.15,0.18,0.19,0.24), mean=0.0744, stddev=0.0538], oderiv-count=8000
component name=tdnn6.batchnorm type=BatchNormComponent, dim=520, block-dim=520, epsilon=0.001, target-rms=1, count=-2830.96, test-mode=false
component name=lstm3.W_all type=NaturalGradientAffineComponent, input-dim=650, output-dim=2080, learning-rate=0.00014557, l2-regularize=0.01, max-change=1.5, linear-params-rms=0.003201, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.02,0.02 0.03,0.04,0.05,0.12,0.15 0.16,0.18,0.18,0.22), mean=0.0679, stddev=0.0453], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.08,0.09 0.09,0.10,0.12,0.18,0.22 0.23,0.24,0.24,0.27), mean=0.139, stddev=0.0456], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-07,8e-07,2e-06,5e-05 0.02,0.02,0.05,0.14,0.25 0.36,0.45,0.49,0.56), mean=0.0957, stddev=0.11], bias-{mean,stddev}=1.807e-05,0.001028, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=lstm3.lstm_nonlin type=LstmNonlinearityComponent, input-dim=2603, output-dim=1040, learning-rate=0.00014557, l2-regularize=0.01, max-change=0.75, cell-dim=520, use-dropout=true, w_ic-rms=0.001058, w_fc-rms=0.001567, w_oc-rms=0.002333, count=2.92e+03, i_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-0.00102769, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-3.4,-2.0,-1.3,-0.32 0.57,1.0,2.0,2.9,3.4 4.0,4.5,5.1,6.3), mean=1.97, stddev=1.31], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.5,-1.2,-0.98,-0.80 -0.65,-0.49,-0.14,0.24,0.45 0.60,0.84,1.1,1.6), mean=-0.119, stddev=0.449] }, f_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-0.00102769, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-4.7,-3.2,-2.7,-2.0 -1.2,-0.52,0.91,2.2,2.8 3.3,4.0,4.4,5.2), mean=0.853, stddev=1.63], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.4,-1.1,-0.92,-0.77 -0.56,-0.33,0.008,0.39,0.56 0.75,0.89,0.96,1.6), mean=0.0213, stddev=0.446] }, c_t_tanh={ self-repair-lower-threshold=0.2, self-repair-scale=1e-05, self-repaired-proportion=-0.356448, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-42,-26,-23,-18 -14,-9.9,0.49,9.7,15 19,24,29,37), mean=0.338, stddev=11.6], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-21,-13,-11,-8.7 -6.9,-4.5,-0.96,2.9,4.9 6.5,8.6,10,13), mean=-0.928, stddev=4.7] }, o_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-0.00102769, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-4.5,-3.6,-2.1,-1.0 -0.29,0.60,1.8,3.3,4.1 4.6,5.2,5.5,6.7), mean=1.87, stddev=1.75], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.3,-1.5,-1.3,-1.1 -0.90,-0.58,-0.14,0.33,0.55 0.69,0.94,1.0,2.1), mean=-0.158, stddev=0.564] }, m_t_tanh={ self-repair-lower-threshold=0.2, self-repair-scale=1e-05, self-repaired-proportion=-0.0147893, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-40,-20,-18,-15 -11,-7.7,0.54,8.0,12 17,19,22,27), mean=0.384, stddev=9.37], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-15,-8.0,-7.4,-6.1 -5.0,-3.5,-1.0,1.5,2.8 3.9,5.3,6.0,14), mean=-1.03, stddev=3.12] }
component name=lstm3.cr_trunc type=BackpropTruncationComponent, dim=650, scale=0.85, count=3.65e+03, recurrence-interval=3, clipping-threshold=30, clipped-proportion=0, zeroing-threshold=15, zeroing-interval=20, zeroed-proportion=0, count-zeroing-boundaries=541
component name=lstm3.dropout_mask type=DropoutMaskComponent, output-dim=3, dropout-proportion=0.11405
component name=lstm3.W_rp type=NaturalGradientAffineComponent, input-dim=520, output-dim=260, learning-rate=0.00014557, l2-regularize=0.01, max-change=1.5, linear-params-rms=0.003894, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.04,0.04,0.04 0.04,0.05,0.06,0.12,0.12 0.13,0.13,0.13,0.13), mean=0.0824, stddev=0.0331], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.03,0.03,0.04 0.04,0.05,0.06,0.07,0.08 0.08,0.09,0.09,0.12), mean=0.0614, stddev=0.0131], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-07,3e-07,3e-07,4e-07 8e-07,5e-06,0.01,0.11,0.16 0.21,0.24,0.27,0.29), mean=0.0524, stddev=0.0717], bias-{mean,stddev}=0.001796,0.01438, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output.affine type=NaturalGradientAffineComponent, input-dim=260, output-dim=2104, learning-rate=0.00014557, l2-regularize=0.01, max-change=1.5, linear-params-rms=0.004739, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.03,0.03,0.04 0.04,0.05,0.07,0.09,0.11 0.12,0.14,0.15,0.25), mean=0.0716, stddev=0.0267], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.12,0.13,0.13 0.14,0.15,0.19,0.27,0.28 0.29,0.30,0.30,0.31), mean=0.209, stddev=0.0602], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-07,4e-07,4e-07,5e-07 8e-07,4e-06,0.006,0.31,0.43 0.50,0.56,0.58,0.62), mean=0.12, stddev=0.181], bias-{mean,stddev}=-1.363e-10,0.001238, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output.log-softmax type=LogSoftmaxComponent, dim=2104, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.03,0.11,0.14 0.17,0.20,0.22,0.50), mean=0.0531, stddev=0.0631], oderiv-count=2560

LOG (nnet3-show-progress[5.5.0-]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:5.84792 tdnn2.affine:5.64306 lstm1.W_all:4.34634 lstm1.lstm_nonlin:0.0814868 lstm1.W_rp:1.80441 tdnn3.affine:3.78915 tdnn4.affine:4.13419 lstm2.W_all:3.03781 lstm2.lstm_nonlin:0.0345022 lstm2.W_rp:1.26203 tdnn5.affine:2.96933 tdnn6.affine:3.33613 lstm3.W_all:3.72185 lstm3.lstm_nonlin:0.0684823 lstm3.W_rp:1.4509 output.affine:3.50554 ]
LOG (nnet3-show-progress[5.5.0-]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:10.9759 tdnn2.affine:9.73244 lstm1.W_all:17.7093 lstm1.lstm_nonlin:1.14696 lstm1.W_rp:12.2225 tdnn3.affine:7.13784 tdnn4.affine:7.209 lstm2.W_all:15.1401 lstm2.lstm_nonlin:0.531204 lstm2.W_rp:11.3973 tdnn5.affine:6.4225 tdnn6.affine:6.79305 lstm3.W_all:21.3899 lstm3.lstm_nonlin:1.77404 lstm3.W_rp:28.8353 output.affine:27.8898 ]
LOG (nnet3-show-progress[5.5.0-]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.530574 tdnn2.affine:0.573495 lstm1.W_all:0.244354 lstm1.lstm_nonlin:0.0713873 lstm1.W_rp:0.146851 tdnn3.affine:0.527847 tdnn4.affine:0.569095 lstm2.W_all:0.200293 lstm2.lstm_nonlin:0.0653355 lstm2.W_rp:0.11064 tdnn5.affine:0.459799 tdnn6.affine:0.487645 lstm3.W_all:0.173865 lstm3.lstm_nonlin:0.0385648 lstm3.W_rp:0.0504304 output.affine:0.125752 ]
LOG (nnet3-show-progress[5.5.0-]:PrintProfile():cu-device.cc:533) -----
[cudevice profile]
Total GPU time:	0s (may involve some double-counting)
-----
# Accounting: time=0 threads=1
# Ended (code 0) at Thu Jul 30 11:32:00 KST 2020, elapsed time 0 seconds
