# nnet3-show-progress --use-gpu=no --verbose=2 exp/nnet3/tdnn_lstm1c_sp/209.mdl exp/nnet3/tdnn_lstm1c_sp/210.mdl 
# Started at Thu Jul 30 11:24:05 KST 2020
#
nnet3-show-progress --use-gpu=no --verbose=2 exp/nnet3/tdnn_lstm1c_sp/209.mdl exp/nnet3/tdnn_lstm1c_sp/210.mdl 
LOG (nnet3-show-progress[5.5.0-]:SelectGpuId():cu-device.cc:153) Manually selected to compute on CPU.
WARNING (nnet3-show-progress[5.5.0-]:Check():nnet-nnet.cc:789) Node lda.delayed is never used to compute any output.
WARNING (nnet3-show-progress[5.5.0-]:Check():nnet-nnet.cc:789) Node lda.delayed is never used to compute any output.
WARNING (nnet3-show-progress[5.5.0-]:Check():nnet-nnet.cc:789) Node lda.delayed is never used to compute any output.
VLOG[1] (nnet3-show-progress[5.5.0-]:main():nnet3-show-progress.cc:136) Printing info for the difference between the neural nets: left-context: 10
right-context: 20
num-parameters: 8426364
modulus: 1
component-node name=lda.delayed component=lda.delayed input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2), ReplaceIndex(ivector, t, 0)) input-dim=300 output-dim=300
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2), ReplaceIndex(ivector, t, 0)) input-dim=300 output-dim=300
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=300 output-dim=520
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=520 output-dim=520
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=520 output-dim=520
component-node name=tdnn2.affine component=tdnn2.affine input=Append(Offset(tdnn1.batchnorm, -1), tdnn1.batchnorm, Offset(tdnn1.batchnorm, 1)) input-dim=1560 output-dim=520
component-node name=tdnn2.relu component=tdnn2.relu input=tdnn2.affine input-dim=520 output-dim=520
component-node name=tdnn2.batchnorm component=tdnn2.batchnorm input=tdnn2.relu input-dim=520 output-dim=520
component-node name=lstm1.W_all component=lstm1.W_all input=Append(tdnn2.batchnorm, IfDefined(Offset(lstm1.r_trunc, -3))) input-dim=650 output-dim=2080
component-node name=lstm1.dropout_mask component=lstm1.dropout_mask input=lstm1.dropout_mask input-dim=3 output-dim=3
component-node name=lstm1.lstm_nonlin component=lstm1.lstm_nonlin input=Append(lstm1.W_all, IfDefined(Offset(lstm1.c_trunc, -3)), lstm1.dropout_mask) input-dim=2603 output-dim=1040
dim-range-node name=lstm1.c input-node=lstm1.lstm_nonlin dim-offset=0 dim=520
dim-range-node name=lstm1.m input-node=lstm1.lstm_nonlin dim-offset=520 dim=520
component-node name=lstm1.rp component=lstm1.W_rp input=lstm1.m input-dim=520 output-dim=260
dim-range-node name=lstm1.r input-node=lstm1.rp dim-offset=0 dim=130
component-node name=lstm1.cr_trunc component=lstm1.cr_trunc input=Append(lstm1.c, lstm1.r) input-dim=650 output-dim=650
dim-range-node name=lstm1.c_trunc input-node=lstm1.cr_trunc dim-offset=0 dim=520
dim-range-node name=lstm1.r_trunc input-node=lstm1.cr_trunc dim-offset=520 dim=130
component-node name=tdnn3.affine component=tdnn3.affine input=Append(Offset(lstm1.rp, -3), lstm1.rp, Offset(lstm1.rp, 3)) input-dim=780 output-dim=520
component-node name=tdnn3.relu component=tdnn3.relu input=tdnn3.affine input-dim=520 output-dim=520
component-node name=tdnn3.batchnorm component=tdnn3.batchnorm input=tdnn3.relu input-dim=520 output-dim=520
component-node name=tdnn4.affine component=tdnn4.affine input=Append(Offset(tdnn3.batchnorm, -3), tdnn3.batchnorm, Offset(tdnn3.batchnorm, 3)) input-dim=1560 output-dim=520
component-node name=tdnn4.relu component=tdnn4.relu input=tdnn4.affine input-dim=520 output-dim=520
component-node name=tdnn4.batchnorm component=tdnn4.batchnorm input=tdnn4.relu input-dim=520 output-dim=520
component-node name=lstm2.W_all component=lstm2.W_all input=Append(tdnn4.batchnorm, IfDefined(Offset(lstm2.r_trunc, -3))) input-dim=650 output-dim=2080
component-node name=lstm2.dropout_mask component=lstm2.dropout_mask input=lstm2.dropout_mask input-dim=3 output-dim=3
component-node name=lstm2.lstm_nonlin component=lstm2.lstm_nonlin input=Append(lstm2.W_all, IfDefined(Offset(lstm2.c_trunc, -3)), lstm2.dropout_mask) input-dim=2603 output-dim=1040
dim-range-node name=lstm2.c input-node=lstm2.lstm_nonlin dim-offset=0 dim=520
dim-range-node name=lstm2.m input-node=lstm2.lstm_nonlin dim-offset=520 dim=520
component-node name=lstm2.rp component=lstm2.W_rp input=lstm2.m input-dim=520 output-dim=260
dim-range-node name=lstm2.r input-node=lstm2.rp dim-offset=0 dim=130
component-node name=lstm2.cr_trunc component=lstm2.cr_trunc input=Append(lstm2.c, lstm2.r) input-dim=650 output-dim=650
dim-range-node name=lstm2.c_trunc input-node=lstm2.cr_trunc dim-offset=0 dim=520
dim-range-node name=lstm2.r_trunc input-node=lstm2.cr_trunc dim-offset=520 dim=130
component-node name=tdnn5.affine component=tdnn5.affine input=Append(Offset(lstm2.rp, -3), lstm2.rp, Offset(lstm2.rp, 3)) input-dim=780 output-dim=520
component-node name=tdnn5.relu component=tdnn5.relu input=tdnn5.affine input-dim=520 output-dim=520
component-node name=tdnn5.batchnorm component=tdnn5.batchnorm input=tdnn5.relu input-dim=520 output-dim=520
component-node name=tdnn6.affine component=tdnn6.affine input=Append(Offset(tdnn5.batchnorm, -3), tdnn5.batchnorm, Offset(tdnn5.batchnorm, 3)) input-dim=1560 output-dim=520
component-node name=tdnn6.relu component=tdnn6.relu input=tdnn6.affine input-dim=520 output-dim=520
component-node name=tdnn6.batchnorm component=tdnn6.batchnorm input=tdnn6.relu input-dim=520 output-dim=520
component-node name=lstm3.W_all component=lstm3.W_all input=Append(tdnn6.batchnorm, IfDefined(Offset(lstm3.r_trunc, -3))) input-dim=650 output-dim=2080
component-node name=lstm3.dropout_mask component=lstm3.dropout_mask input=lstm3.dropout_mask input-dim=3 output-dim=3
component-node name=lstm3.lstm_nonlin component=lstm3.lstm_nonlin input=Append(lstm3.W_all, IfDefined(Offset(lstm3.c_trunc, -3)), lstm3.dropout_mask) input-dim=2603 output-dim=1040
dim-range-node name=lstm3.c input-node=lstm3.lstm_nonlin dim-offset=0 dim=520
dim-range-node name=lstm3.m input-node=lstm3.lstm_nonlin dim-offset=520 dim=520
component-node name=lstm3.rp component=lstm3.W_rp input=lstm3.m input-dim=520 output-dim=260
dim-range-node name=lstm3.r input-node=lstm3.rp dim-offset=0 dim=130
component-node name=lstm3.cr_trunc component=lstm3.cr_trunc input=Append(lstm3.c, lstm3.r) input-dim=650 output-dim=650
dim-range-node name=lstm3.c_trunc input-node=lstm3.cr_trunc dim-offset=0 dim=520
dim-range-node name=lstm3.r_trunc input-node=lstm3.cr_trunc dim-offset=520 dim=130
component-node name=output.affine component=output.affine input=lstm3.rp input-dim=260 output-dim=2104
component-node name=output.log-softmax component=output.log-softmax input=output.affine input-dim=2104 output-dim=2104
output-node name=output input=Offset(output.log-softmax, 5) dim=2104 objective=linear
component name=lda.delayed type=NoOpComponent, dim=300
component name=lda type=FixedAffineComponent, input-dim=300, output-dim=300, linear-params-rms=0.006709, bias-{mean,stddev}=-0.01975,0.4295
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=300, output-dim=520, learning-rate=0.000155103, l2-regularize=0.05, max-change=0.75, linear-params-rms=0.01551, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.005,0.006,0.009 0.02,0.08,0.28,0.32,0.35 0.38,0.41,0.43,0.52), mean=0.241, stddev=0.119], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.08,0.09 0.10,0.12,0.33,0.43,0.51 0.63,0.71,0.76,0.84), mean=0.309, stddev=0.172], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.02 0.03,0.05,0.18,0.45,0.62 0.76,0.88,0.95,1.1), mean=0.261, stddev=0.239], bias-{mean,stddev}=0.001508,0.0193, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=520, self-repair-scale=1e-05
component name=tdnn1.batchnorm type=BatchNormComponent, dim=520, block-dim=520, epsilon=0.001, target-rms=1, count=-10155.3, test-mode=false
component name=tdnn2.affine type=NaturalGradientAffineComponent, input-dim=1560, output-dim=520, learning-rate=0.000155103, l2-regularize=0.05, max-change=0.75, linear-params-rms=0.006666, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.21,0.22,0.23 0.23,0.24,0.26,0.28,0.29 0.30,0.31,0.31,0.35), mean=0.262, stddev=0.0229], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.003,0.005 0.01,0.05,0.16,0.18,0.20 0.21,0.22,0.24,0.29), mean=0.136, stddev=0.0675], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.03,0.04,0.04 0.05,0.07,0.15,0.32,0.45 0.57,0.66,0.70,0.83), mean=0.205, stddev=0.166], bias-{mean,stddev}=0.0006036,0.01064, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn2.relu type=RectifiedLinearComponent, dim=520, self-repair-scale=1e-05, count=1.53e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.05,0.09,0.14 0.17,0.22,0.28,0.38,0.42 0.46,0.50,0.54,0.68), mean=0.291, stddev=0.1], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.24,0.26,0.31 0.34,0.39,0.47,0.55,0.59 0.63,0.65,0.67,0.68), mean=0.468, stddev=0.0937]
component name=tdnn2.batchnorm type=BatchNormComponent, dim=520, block-dim=520, epsilon=0.001, target-rms=1, count=-9995.41, test-mode=false
component name=lstm1.W_all type=NaturalGradientAffineComponent, input-dim=650, output-dim=2080, learning-rate=0.000155103, l2-regularize=0.01, max-change=1.5, linear-params-rms=0.004072, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-07,4e-06,1e-05,9e-05 0.001,0.03,0.08,0.14,0.17 0.19,0.22,0.23,0.29), mean=0.086, stddev=0.0581], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.05,0.05 0.06,0.08,0.20,0.22,0.23 0.23,0.24,0.25,0.28), mean=0.175, stddev=0.0608], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(9e-08,1e-07,1e-07,1e-07 2e-07,0.04,0.09,0.21,0.30 0.41,0.54,0.60,0.73), mean=0.132, stddev=0.13], bias-{mean,stddev}=8.501e-06,0.001419, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=lstm1.lstm_nonlin type=LstmNonlinearityComponent, input-dim=2603, output-dim=1040, learning-rate=0.000155103, l2-regularize=0.01, max-change=0.75, cell-dim=520, use-dropout=true, w_ic-rms=0.001364, w_fc-rms=0.001609, w_oc-rms=0.003163, count=7.33e+03, i_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-0.000555634, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.2,-0.58,-0.35,-0.14 0.01,0.19,0.50,0.81,1.1 1.4,1.6,1.8,2.0), mean=0.518, stddev=0.447], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.2,-0.34,-0.29,-0.15 -0.07,0.08,0.25,0.33,0.43 0.53,0.63,0.73,1.2), mean=0.21, stddev=0.213] }, f_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-0.000555634, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.1,-0.67,-0.45,-0.18 -0.01,0.22,0.49,0.72,0.92 1.1,1.3,1.6,2.9), mean=0.473, stddev=0.404], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.62,-0.26,-0.22,-0.08 0.02,0.13,0.25,0.29,0.37 0.43,0.59,0.64,0.86), mean=0.217, stddev=0.158] }, c_t_tanh={ self-repair-lower-threshold=0.2, self-repair-scale=1e-05, self-repaired-proportion=-0.191938, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-10,-7.7,-7.2,-5.2 -3.7,-2.4,-0.09,1.8,2.8 4.3,5.3,6.2,9.4), mean=-0.255, stddev=2.8], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-7.0,-5.3,-4.3,-3.6 -2.7,-1.5,0.41,1.7,2.9 3.9,5.0,6.2,8.7), mean=0.244, stddev=2.22] }, o_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-0.000555634, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.4,-0.90,-0.76,-0.27 -0.08,0.18,0.50,0.92,1.2 1.5,1.8,2.0,2.6), mean=0.534, stddev=0.542], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.81,-0.56,-0.42,-0.25 -0.11,0.04,0.23,0.35,0.49 0.65,0.85,0.99,1.5), mean=0.206, stddev=0.274] }, m_t_tanh={ self-repair-lower-threshold=0.2, self-repair-scale=1e-05, self-repaired-proportion=-0.000555634, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-7.1,-5.4,-4.6,-3.7 -2.6,-1.6,-0.10,1.2,2.2 2.9,3.6,4.3,6.7), mean=-0.235, stddev=1.95], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-3.2,-2.2,-1.6,-1.1 -0.68,-0.14,0.72,1.2,1.7 2.3,2.7,2.9,4.4), mean=0.599, stddev=1] }
component name=lstm1.cr_trunc type=BackpropTruncationComponent, dim=650, scale=0.85, count=7.74e+03, recurrence-interval=3, clipping-threshold=30, clipped-proportion=-0.000258264, zeroing-threshold=15, zeroing-interval=20, zeroed-proportion=0, count-zeroing-boundaries=1161
component name=lstm1.dropout_mask type=DropoutMaskComponent, output-dim=3, dropout-proportion=0.0865014
component name=lstm1.W_rp type=NaturalGradientAffineComponent, input-dim=520, output-dim=260, learning-rate=0.000155103, l2-regularize=0.01, max-change=1.5, linear-params-rms=0.005374, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.03,0.04,0.04 0.04,0.05,0.10,0.17,0.18 0.19,0.19,0.20,0.21), mean=0.11, stddev=0.0539], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.0004,0.0007,0.001 0.005,0.06,0.08,0.11,0.12 0.13,0.14,0.14,0.15), mean=0.0783, stddev=0.0372], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-08,4e-08,5e-08,5e-08 7e-08,1e-07,4e-07,0.01,0.24 0.33,0.40,0.43,0.47), mean=0.0495, stddev=0.112], bias-{mean,stddev}=-0.0004115,0.007061, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.affine type=NaturalGradientAffineComponent, input-dim=780, output-dim=520, learning-rate=0.000155103, l2-regularize=0.05, max-change=0.75, linear-params-rms=0.006225, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.12,0.13,0.13 0.14,0.15,0.17,0.19,0.21 0.22,0.24,0.24,0.29), mean=0.172, stddev=0.0285], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.04,0.04,0.04 0.05,0.06,0.11,0.19,0.21 0.22,0.23,0.23,0.25), mean=0.125, stddev=0.0668], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-08,4e-08,4e-08,6e-08 8e-08,1e-07,2e-05,0.16,0.34 0.45,0.55,0.59,0.69), mean=0.0795, stddev=0.155], bias-{mean,stddev}=2.546e-05,0.008004, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.relu type=RectifiedLinearComponent, dim=520, self-repair-scale=1e-05, count=8.45e+03, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.7,-2.1,-1.9,-1.4 -1.0,-0.62,0.10,0.84,1.2 1.6,2.0,2.3,3.1), mean=0.0968, stddev=0.909], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-11,-8.8,-7.6,-6.0 -4.7,-3.3,0.17,3.4,5.4 7.2,8.6,10.0,14), mean=0.184, stddev=4.02]
component name=tdnn3.batchnorm type=BatchNormComponent, dim=520, block-dim=520, epsilon=0.001, target-rms=1, count=-9515.68, test-mode=false
component name=tdnn4.affine type=NaturalGradientAffineComponent, input-dim=1560, output-dim=520, learning-rate=0.000155103, l2-regularize=0.05, max-change=0.75, linear-params-rms=0.004917, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.16,0.17,0.17 0.17,0.18,0.19,0.21,0.21 0.22,0.23,0.23,0.25), mean=0.194, stddev=0.0155], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.08,0.09 0.09,0.10,0.11,0.13,0.13 0.14,0.15,0.16,0.17), mean=0.111, stddev=0.0171], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.04,0.05,0.05 0.06,0.07,0.13,0.24,0.32 0.39,0.47,0.50,0.57), mean=0.161, stddev=0.108], bias-{mean,stddev}=0.0006526,0.005888, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn4.relu type=RectifiedLinearComponent, dim=520, self-repair-scale=1e-05, count=1.3e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.12,0.13,0.14 0.16,0.19,0.24,0.29,0.33 0.36,0.39,0.41,0.50), mean=0.246, stddev=0.0627], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.20,0.25,0.28 0.33,0.36,0.45,0.52,0.57 0.60,0.63,0.64,0.79), mean=0.445, stddev=0.0956], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.04,0.06,0.07 0.08,0.09,0.09,0.10), mean=0.0348, stddev=0.0294], oderiv-count=39168
component name=tdnn4.batchnorm type=BatchNormComponent, dim=520, block-dim=520, epsilon=0.001, target-rms=1, count=-9035.96, test-mode=false
component name=lstm2.W_all type=NaturalGradientAffineComponent, input-dim=650, output-dim=2080, learning-rate=0.000155103, l2-regularize=0.01, max-change=1.5, linear-params-rms=0.002855, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-08,1e-07,2e-07,4e-07 2e-06,3e-05,0.05,0.10,0.13 0.15,0.16,0.17,0.22), mean=0.053, stddev=0.0499], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.03,0.04,0.04 0.04,0.11,0.14,0.15,0.16 0.17,0.18,0.18,0.22), mean=0.124, stddev=0.0408], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-08,8e-08,9e-08,1e-07 4e-06,0.02,0.06,0.14,0.21 0.30,0.39,0.43,0.51), mean=0.0904, stddev=0.0937], bias-{mean,stddev}=-5.384e-05,0.003385, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=lstm2.lstm_nonlin type=LstmNonlinearityComponent, input-dim=2603, output-dim=1040, learning-rate=0.000155103, l2-regularize=0.01, max-change=0.75, cell-dim=520, use-dropout=true, w_ic-rms=0.0007768, w_fc-rms=0.0008071, w_oc-rms=0.001439, count=7.19e+03, i_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-0.000522212, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.2,-0.68,-0.57,-0.28 -0.05,0.26,0.50,0.72,1.0 1.3,1.6,1.8,2.5), mean=0.5, stddev=0.461], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.43,-0.13,-0.08,-0.01 0.07,0.16,0.25,0.30,0.38 0.46,0.54,0.59,0.99), mean=0.238, stddev=0.135] }, f_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-0.000522212, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.3,-0.92,-0.62,-0.31 -0.06,0.23,0.50,0.65,0.97 1.2,1.4,1.5,2.7), mean=0.46, stddev=0.445], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.37,-0.06,0.006,0.10 0.14,0.20,0.25,0.29,0.34 0.39,0.44,0.49,0.74), mean=0.247, stddev=0.0947] }, c_t_tanh={ self-repair-lower-threshold=0.2, self-repair-scale=1e-05, self-repaired-proportion=0.0105367, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-8.9,-7.1,-6.6,-5.2 -3.8,-1.8,-0.005,1.5,3.0 4.2,5.8,7.1,9.2), mean=-0.179, stddev=2.65], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-3.1,-2.5,-2.3,-1.6 -0.83,0.03,1.0,1.7,2.5 3.1,4.4,5.3,6.3), mean=0.942, stddev=1.39] }, o_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-0.000522212, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.5,-0.99,-0.85,-0.39 -0.16,0.18,0.50,0.79,1.1 1.5,1.7,1.9,2.6), mean=0.495, stddev=0.542], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.28,-0.09,-0.05,0.01 0.08,0.17,0.25,0.30,0.40 0.50,0.58,0.64,0.77), mean=0.248, stddev=0.136] }, m_t_tanh={ self-repair-lower-threshold=0.2, self-repair-scale=1e-05, self-repaired-proportion=-0.000522212, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-5.8,-4.7,-4.2,-3.5 -2.5,-1.3,-0.003,0.74,2.1 2.8,3.9,4.6,6.9), mean=-0.143, stddev=1.78], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.9,-0.95,-0.72,-0.34 0.16,0.52,1.0,1.4,1.8 2.2,2.7,3.0,4.5), mean=0.973, stddev=0.738] }
component name=lstm2.cr_trunc type=BackpropTruncationComponent, dim=650, scale=0.85, count=6.98e+03, recurrence-interval=3, clipping-threshold=30, clipped-proportion=0, zeroing-threshold=15, zeroing-interval=20, zeroed-proportion=0, count-zeroing-boundaries=1056
component name=lstm2.dropout_mask type=DropoutMaskComponent, output-dim=3, dropout-proportion=0.0865014
component name=lstm2.W_rp type=NaturalGradientAffineComponent, input-dim=520, output-dim=260, learning-rate=0.000155103, l2-regularize=0.01, max-change=1.5, linear-params-rms=0.00373, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.04,0.04,0.05 0.05,0.05,0.08,0.11,0.11 0.12,0.12,0.13,0.14), mean=0.0808, stddev=0.0265], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-05,8e-05,0.0001,0.0001 0.0003,0.0007,0.06,0.08,0.09 0.09,0.10,0.10,0.13), mean=0.0477, stddev=0.0366], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-08,3e-08,4e-08,5e-08 7e-08,1e-07,2e-06,0.09,0.17 0.21,0.25,0.27,0.31), mean=0.0396, stddev=0.0753], bias-{mean,stddev}=0.0006335,0.006937, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.affine type=NaturalGradientAffineComponent, input-dim=780, output-dim=520, learning-rate=0.000155103, l2-regularize=0.05, max-change=0.75, linear-params-rms=0.004877, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.09,0.10,0.10 0.11,0.11,0.13,0.15,0.17 0.18,0.19,0.20,0.21), mean=0.134, stddev=0.0231], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.06,0.06 0.06,0.07,0.10,0.14,0.15 0.16,0.17,0.17,0.19), mean=0.105, stddev=0.0362], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-08,4e-08,5e-08,6e-08 9e-08,2e-07,0.0009,0.14,0.25 0.35,0.43,0.46,0.54), mean=0.0687, stddev=0.118], bias-{mean,stddev}=2.842e-05,0.003835, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.relu type=RectifiedLinearComponent, dim=520, self-repair-scale=1e-05, count=1.38e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.05,-0.03,-0.02,-0.006 0.007,0.02,0.06,0.10,0.13 0.15,0.17,0.18,0.25), mean=0.0631, stddev=0.0468], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.20,-0.07,-0.02,0.11 0.17,0.28,0.49,0.71,0.80 0.87,0.94,1.0,1.2), mean=0.493, stddev=0.241]
component name=tdnn5.batchnorm type=BatchNormComponent, dim=520, block-dim=520, epsilon=0.001, target-rms=1, count=-8556.24, test-mode=false
component name=tdnn6.affine type=NaturalGradientAffineComponent, input-dim=1560, output-dim=520, learning-rate=0.000155103, l2-regularize=0.05, max-change=0.75, linear-params-rms=0.003965, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.13,0.13 0.14,0.14,0.15,0.17,0.18 0.18,0.19,0.19,0.20), mean=0.156, stddev=0.0159], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.06,0.07 0.07,0.08,0.09,0.10,0.11 0.11,0.12,0.13,0.14), mean=0.0894, stddev=0.0136], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.03,0.03,0.04 0.04,0.05,0.10,0.19,0.26 0.33,0.39,0.42,0.53), mean=0.127, stddev=0.0921], bias-{mean,stddev}=-0.0004204,0.004698, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn6.relu type=RectifiedLinearComponent, dim=520, self-repair-scale=1e-05
component name=tdnn6.batchnorm type=BatchNormComponent, dim=520, block-dim=520, epsilon=0.001, target-rms=1, count=-8076.51, test-mode=false
component name=lstm3.W_all type=NaturalGradientAffineComponent, input-dim=650, output-dim=2080, learning-rate=0.000155103, l2-regularize=0.01, max-change=1.5, linear-params-rms=0.003583, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.02,0.03 0.03,0.04,0.06,0.13,0.16 0.18,0.19,0.20,0.40), mean=0.0771, stddev=0.0489], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.08,0.09,0.10 0.10,0.11,0.14,0.20,0.25 0.26,0.27,0.28,0.30), mean=0.155, stddev=0.0524], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-07,1e-06,3e-06,9e-05 0.02,0.03,0.06,0.16,0.28 0.40,0.51,0.54,0.66), mean=0.107, stddev=0.124], bias-{mean,stddev}=0.0001293,0.001333, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=lstm3.lstm_nonlin type=LstmNonlinearityComponent, input-dim=2603, output-dim=1040, learning-rate=0.000155103, l2-regularize=0.01, max-change=0.75, cell-dim=520, use-dropout=true, w_ic-rms=0.00126, w_fc-rms=0.001903, w_oc-rms=0.002751, count=7.05e+03, i_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-0.000487679, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.9,-1.4,-1.1,-0.51 -0.17,0.24,0.72,1.3,1.6 1.9,2.1,2.3,2.7), mean=0.737, stddev=0.727], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.46,-0.30,-0.20,-0.10 -0.006,0.11,0.29,0.44,0.53 0.61,0.71,0.75,0.85), mean=0.275, stddev=0.214] }, f_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-0.000487679, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.6,-1.4,-1.3,-0.91 -0.52,-0.13,0.58,1.3,1.6 1.9,2.2,2.5,3.4), mean=0.569, stddev=0.844], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.49,-0.28,-0.23,-0.11 -0.03,0.07,0.20,0.35,0.47 0.56,0.65,0.69,0.85), mean=0.21, stddev=0.198] }, c_t_tanh={ self-repair-lower-threshold=0.2, self-repair-scale=1e-05, self-repaired-proportion=0.52219, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-20,-14,-13,-10.0 -7.1,-4.0,-0.02,4.5,6.6 8.8,11,14,20), mean=0.0328, stddev=5.67], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-7.2,-5.3,-5.0,-3.9 -2.7,-1.8,-0.01,1.9,3.1 3.8,4.9,5.7,9.8), mean=0.0454, stddev=2.34] }, o_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-0.000487679, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-3.0,-1.9,-1.5,-0.87 -0.45,0.10,0.82,1.5,1.9 2.3,2.5,2.9,3.8), mean=0.786, stddev=0.944], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.70,-0.43,-0.39,-0.24 -0.14,-0.02,0.19,0.41,0.52 0.63,0.79,0.83,1.1), mean=0.198, stddev=0.273] }, m_t_tanh={ self-repair-lower-threshold=0.2, self-repair-scale=1e-05, self-repaired-proportion=0.0388152, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-16,-11,-10,-8.4 -5.8,-3.3,-0.07,3.7,5.1 7.1,9.0,11,15), mean=-0.0517, stddev=4.53], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-4.9,-3.5,-3.2,-2.4 -1.7,-0.97,0.15,1.4,2.1 2.7,3.3,3.9,6.9), mean=0.194, stddev=1.56] }
component name=lstm3.cr_trunc type=BackpropTruncationComponent, dim=650, scale=0.85, count=6.21e+03, recurrence-interval=3, clipping-threshold=30, clipped-proportion=0, zeroing-threshold=15, zeroing-interval=20, zeroed-proportion=0.00108932, count-zeroing-boundaries=918
component name=lstm3.dropout_mask type=DropoutMaskComponent, output-dim=3, dropout-proportion=0.0865014
component name=lstm3.W_rp type=NaturalGradientAffineComponent, input-dim=520, output-dim=260, learning-rate=0.000155103, l2-regularize=0.01, max-change=1.5, linear-params-rms=0.004384, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.05,0.05 0.05,0.05,0.07,0.13,0.14 0.14,0.14,0.15,0.16), mean=0.0929, stddev=0.0368], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.04,0.04,0.04 0.05,0.06,0.07,0.08,0.09 0.09,0.10,0.10,0.15), mean=0.0691, stddev=0.0149], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-07,4e-07,4e-07,6e-07 2e-06,8e-06,0.02,0.12,0.19 0.23,0.27,0.30,0.33), mean=0.0594, stddev=0.0804], bias-{mean,stddev}=7.52e-05,0.01236, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output.affine type=NaturalGradientAffineComponent, input-dim=260, output-dim=2104, learning-rate=0.000155103, l2-regularize=0.01, max-change=1.5, linear-params-rms=0.005193, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.03,0.04 0.05,0.05,0.07,0.10,0.12 0.13,0.15,0.17,0.35), mean=0.0781, stddev=0.0303], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.14,0.15,0.15 0.15,0.16,0.21,0.30,0.31 0.31,0.33,0.33,0.35), mean=0.229, stddev=0.064], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-07,5e-07,5e-07,7e-07 1e-06,7e-06,0.007,0.34,0.46 0.54,0.61,0.64,0.69), mean=0.132, stddev=0.198], bias-{mean,stddev}=1.239e-10,0.001324, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output.log-softmax type=LogSoftmaxComponent, dim=2104, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.01,0.05,0.06 0.07,0.08,0.09,0.70), mean=0.0223, stddev=0.0306], oderiv-count=13440

LOG (nnet3-show-progress[5.5.0-]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:6.14369 tdnn2.affine:6.00845 lstm1.W_all:4.73517 lstm1.lstm_nonlin:0.0866901 lstm1.W_rp:1.97937 tdnn3.affine:3.96883 tdnn4.affine:4.43031 lstm2.W_all:3.32277 lstm2.lstm_nonlin:0.0415897 lstm2.W_rp:1.37604 tdnn5.affine:3.10705 tdnn6.affine:3.57276 lstm3.W_all:4.16634 lstm3.lstm_nonlin:0.0815038 lstm3.W_rp:1.62421 output.affine:3.8413 ]
LOG (nnet3-show-progress[5.5.0-]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:11.1752 tdnn2.affine:9.98149 lstm1.W_all:18.0736 lstm1.lstm_nonlin:1.15009 lstm1.W_rp:12.2459 tdnn3.affine:7.27131 tdnn4.affine:7.42583 lstm2.W_all:15.2523 lstm2.lstm_nonlin:0.505568 lstm2.W_rp:11.3207 tdnn5.affine:6.57305 tdnn6.affine:6.98944 lstm3.W_all:21.703 lstm3.lstm_nonlin:1.77985 lstm3.W_rp:28.2987 output.affine:28.081 ]
LOG (nnet3-show-progress[5.5.0-]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.545288 tdnn2.affine:0.598275 lstm1.W_all:0.261632 lstm1.lstm_nonlin:0.075131 lstm1.W_rp:0.161345 tdnn3.affine:0.544242 tdnn4.affine:0.595742 lstm2.W_all:0.21821 lstm2.lstm_nonlin:0.0827425 lstm2.W_rp:0.122056 tdnn5.affine:0.47589 tdnn6.affine:0.513714 lstm3.W_all:0.191929 lstm3.lstm_nonlin:0.045709 lstm3.W_rp:0.0574197 output.affine:0.136749 ]
LOG (nnet3-show-progress[5.5.0-]:PrintProfile():cu-device.cc:533) -----
[cudevice profile]
Total GPU time:	0s (may involve some double-counting)
-----
# Accounting: time=1 threads=1
# Ended (code 0) at Thu Jul 30 11:24:06 KST 2020, elapsed time 1 seconds
