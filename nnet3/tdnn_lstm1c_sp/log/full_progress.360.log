# nnet3-show-progress --use-gpu=no --verbose=2 exp/nnet3/tdnn_lstm1c_sp/359.mdl exp/nnet3/tdnn_lstm1c_sp/360.mdl 
# Started at Thu Jul 30 12:23:41 KST 2020
#
nnet3-show-progress --use-gpu=no --verbose=2 exp/nnet3/tdnn_lstm1c_sp/359.mdl exp/nnet3/tdnn_lstm1c_sp/360.mdl 
LOG (nnet3-show-progress[5.5.0-]:SelectGpuId():cu-device.cc:153) Manually selected to compute on CPU.
WARNING (nnet3-show-progress[5.5.0-]:Check():nnet-nnet.cc:789) Node lda.delayed is never used to compute any output.
WARNING (nnet3-show-progress[5.5.0-]:Check():nnet-nnet.cc:789) Node lda.delayed is never used to compute any output.
WARNING (nnet3-show-progress[5.5.0-]:Check():nnet-nnet.cc:789) Node lda.delayed is never used to compute any output.
VLOG[1] (nnet3-show-progress[5.5.0-]:main():nnet3-show-progress.cc:136) Printing info for the difference between the neural nets: left-context: 10
right-context: 20
num-parameters: 8426364
modulus: 1
component-node name=lda.delayed component=lda.delayed input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2), ReplaceIndex(ivector, t, 0)) input-dim=300 output-dim=300
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2), ReplaceIndex(ivector, t, 0)) input-dim=300 output-dim=300
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=300 output-dim=520
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=520 output-dim=520
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=520 output-dim=520
component-node name=tdnn2.affine component=tdnn2.affine input=Append(Offset(tdnn1.batchnorm, -1), tdnn1.batchnorm, Offset(tdnn1.batchnorm, 1)) input-dim=1560 output-dim=520
component-node name=tdnn2.relu component=tdnn2.relu input=tdnn2.affine input-dim=520 output-dim=520
component-node name=tdnn2.batchnorm component=tdnn2.batchnorm input=tdnn2.relu input-dim=520 output-dim=520
component-node name=lstm1.W_all component=lstm1.W_all input=Append(tdnn2.batchnorm, IfDefined(Offset(lstm1.r_trunc, -3))) input-dim=650 output-dim=2080
component-node name=lstm1.dropout_mask component=lstm1.dropout_mask input=lstm1.dropout_mask input-dim=3 output-dim=3
component-node name=lstm1.lstm_nonlin component=lstm1.lstm_nonlin input=Append(lstm1.W_all, IfDefined(Offset(lstm1.c_trunc, -3)), lstm1.dropout_mask) input-dim=2603 output-dim=1040
dim-range-node name=lstm1.c input-node=lstm1.lstm_nonlin dim-offset=0 dim=520
dim-range-node name=lstm1.m input-node=lstm1.lstm_nonlin dim-offset=520 dim=520
component-node name=lstm1.rp component=lstm1.W_rp input=lstm1.m input-dim=520 output-dim=260
dim-range-node name=lstm1.r input-node=lstm1.rp dim-offset=0 dim=130
component-node name=lstm1.cr_trunc component=lstm1.cr_trunc input=Append(lstm1.c, lstm1.r) input-dim=650 output-dim=650
dim-range-node name=lstm1.c_trunc input-node=lstm1.cr_trunc dim-offset=0 dim=520
dim-range-node name=lstm1.r_trunc input-node=lstm1.cr_trunc dim-offset=520 dim=130
component-node name=tdnn3.affine component=tdnn3.affine input=Append(Offset(lstm1.rp, -3), lstm1.rp, Offset(lstm1.rp, 3)) input-dim=780 output-dim=520
component-node name=tdnn3.relu component=tdnn3.relu input=tdnn3.affine input-dim=520 output-dim=520
component-node name=tdnn3.batchnorm component=tdnn3.batchnorm input=tdnn3.relu input-dim=520 output-dim=520
component-node name=tdnn4.affine component=tdnn4.affine input=Append(Offset(tdnn3.batchnorm, -3), tdnn3.batchnorm, Offset(tdnn3.batchnorm, 3)) input-dim=1560 output-dim=520
component-node name=tdnn4.relu component=tdnn4.relu input=tdnn4.affine input-dim=520 output-dim=520
component-node name=tdnn4.batchnorm component=tdnn4.batchnorm input=tdnn4.relu input-dim=520 output-dim=520
component-node name=lstm2.W_all component=lstm2.W_all input=Append(tdnn4.batchnorm, IfDefined(Offset(lstm2.r_trunc, -3))) input-dim=650 output-dim=2080
component-node name=lstm2.dropout_mask component=lstm2.dropout_mask input=lstm2.dropout_mask input-dim=3 output-dim=3
component-node name=lstm2.lstm_nonlin component=lstm2.lstm_nonlin input=Append(lstm2.W_all, IfDefined(Offset(lstm2.c_trunc, -3)), lstm2.dropout_mask) input-dim=2603 output-dim=1040
dim-range-node name=lstm2.c input-node=lstm2.lstm_nonlin dim-offset=0 dim=520
dim-range-node name=lstm2.m input-node=lstm2.lstm_nonlin dim-offset=520 dim=520
component-node name=lstm2.rp component=lstm2.W_rp input=lstm2.m input-dim=520 output-dim=260
dim-range-node name=lstm2.r input-node=lstm2.rp dim-offset=0 dim=130
component-node name=lstm2.cr_trunc component=lstm2.cr_trunc input=Append(lstm2.c, lstm2.r) input-dim=650 output-dim=650
dim-range-node name=lstm2.c_trunc input-node=lstm2.cr_trunc dim-offset=0 dim=520
dim-range-node name=lstm2.r_trunc input-node=lstm2.cr_trunc dim-offset=520 dim=130
component-node name=tdnn5.affine component=tdnn5.affine input=Append(Offset(lstm2.rp, -3), lstm2.rp, Offset(lstm2.rp, 3)) input-dim=780 output-dim=520
component-node name=tdnn5.relu component=tdnn5.relu input=tdnn5.affine input-dim=520 output-dim=520
component-node name=tdnn5.batchnorm component=tdnn5.batchnorm input=tdnn5.relu input-dim=520 output-dim=520
component-node name=tdnn6.affine component=tdnn6.affine input=Append(Offset(tdnn5.batchnorm, -3), tdnn5.batchnorm, Offset(tdnn5.batchnorm, 3)) input-dim=1560 output-dim=520
component-node name=tdnn6.relu component=tdnn6.relu input=tdnn6.affine input-dim=520 output-dim=520
component-node name=tdnn6.batchnorm component=tdnn6.batchnorm input=tdnn6.relu input-dim=520 output-dim=520
component-node name=lstm3.W_all component=lstm3.W_all input=Append(tdnn6.batchnorm, IfDefined(Offset(lstm3.r_trunc, -3))) input-dim=650 output-dim=2080
component-node name=lstm3.dropout_mask component=lstm3.dropout_mask input=lstm3.dropout_mask input-dim=3 output-dim=3
component-node name=lstm3.lstm_nonlin component=lstm3.lstm_nonlin input=Append(lstm3.W_all, IfDefined(Offset(lstm3.c_trunc, -3)), lstm3.dropout_mask) input-dim=2603 output-dim=1040
dim-range-node name=lstm3.c input-node=lstm3.lstm_nonlin dim-offset=0 dim=520
dim-range-node name=lstm3.m input-node=lstm3.lstm_nonlin dim-offset=520 dim=520
component-node name=lstm3.rp component=lstm3.W_rp input=lstm3.m input-dim=520 output-dim=260
dim-range-node name=lstm3.r input-node=lstm3.rp dim-offset=0 dim=130
component-node name=lstm3.cr_trunc component=lstm3.cr_trunc input=Append(lstm3.c, lstm3.r) input-dim=650 output-dim=650
dim-range-node name=lstm3.c_trunc input-node=lstm3.cr_trunc dim-offset=0 dim=520
dim-range-node name=lstm3.r_trunc input-node=lstm3.cr_trunc dim-offset=520 dim=130
component-node name=output.affine component=output.affine input=lstm3.rp input-dim=260 output-dim=2104
component-node name=output.log-softmax component=output.log-softmax input=output.affine input-dim=2104 output-dim=2104
output-node name=output input=Offset(output.log-softmax, 5) dim=2104 objective=linear
component name=lda.delayed type=NoOpComponent, dim=300
component name=lda type=FixedAffineComponent, input-dim=300, output-dim=300, linear-params-rms=0.006709, bias-{mean,stddev}=-0.01975,0.4295
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=300, output-dim=520, learning-rate=0.000133432, l2-regularize=0.05, max-change=0.75, linear-params-rms=0.0093, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.003,0.003 0.005,0.009,0.17,0.20,0.22 0.24,0.26,0.28,0.36), mean=0.137, stddev=0.085], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.05,0.05,0.05 0.06,0.07,0.20,0.26,0.30 0.37,0.43,0.44,0.55), mean=0.186, stddev=0.102], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.008,0.009,0.01 0.02,0.03,0.10,0.27,0.37 0.46,0.53,0.59,0.68), mean=0.154, stddev=0.146], bias-{mean,stddev}=-0.0004788,0.01207, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=520, self-repair-scale=1e-05, count=1.32e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.06,-0.05,-0.02,-0.006 -0.001,-2e-05,0.03,0.09,0.12 0.14,0.16,0.18,0.26), mean=0.0447, stddev=0.0528], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.64,-0.46,-0.38,-0.23 -0.12,0.04,0.37,0.70,0.85 0.93,1.1,1.1,1.3), mean=0.37, stddev=0.367]
component name=tdnn1.batchnorm type=BatchNormComponent, dim=520, block-dim=520, epsilon=0.001, target-rms=1, count=-1556.45, test-mode=false
component name=tdnn2.affine type=NaturalGradientAffineComponent, input-dim=1560, output-dim=520, learning-rate=0.000133432, l2-regularize=0.05, max-change=0.75, linear-params-rms=0.003793, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.12,0.13,0.13 0.13,0.14,0.15,0.16,0.17 0.17,0.18,0.18,0.20), mean=0.149, stddev=0.0131], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0009,0.001,0.001,0.002 0.002,0.005,0.09,0.11,0.12 0.13,0.13,0.15,0.16), mean=0.0737, stddev=0.0453], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.02 0.03,0.04,0.08,0.18,0.26 0.33,0.39,0.42,0.46), mean=0.115, stddev=0.0965], bias-{mean,stddev}=-0.0005324,0.006371, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn2.relu type=RectifiedLinearComponent, dim=520, self-repair-scale=1e-05, count=1.56e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.12,0.15,0.17 0.19,0.22,0.26,0.32,0.35 0.38,0.40,0.42,0.47), mean=0.266, stddev=0.0639], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.28,0.29,0.33 0.36,0.39,0.45,0.50,0.53 0.56,0.58,0.60,0.64), mean=0.446, stddev=0.0673]
component name=tdnn2.batchnorm type=BatchNormComponent, dim=520, block-dim=520, epsilon=0.001, target-rms=1, count=-1523.68, test-mode=false
component name=lstm1.W_all type=NaturalGradientAffineComponent, input-dim=650, output-dim=2080, learning-rate=0.000133432, l2-regularize=0.01, max-change=1.5, linear-params-rms=0.002277, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-09,5e-08,1e-07,1e-06 3e-05,0.02,0.05,0.08,0.09 0.10,0.12,0.12,0.16), mean=0.0482, stddev=0.0324], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.03 0.03,0.04,0.11,0.12,0.13 0.14,0.15,0.16,0.18), mean=0.0971, stddev=0.0368], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(6e-08,7e-08,8e-08,1e-07 2e-07,0.02,0.05,0.12,0.17 0.23,0.29,0.32,0.39), mean=0.0745, stddev=0.0723], bias-{mean,stddev}=4.885e-05,0.000716, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=lstm1.lstm_nonlin type=LstmNonlinearityComponent, input-dim=2603, output-dim=1040, learning-rate=0.000133432, l2-regularize=0.01, max-change=0.75, cell-dim=520, use-dropout=true, w_ic-rms=0.0009593, w_fc-rms=0.001037, w_oc-rms=0.001965, i_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-3.25472e-05, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.009,0.09,0.14,0.22 0.29,0.35,0.50,0.60,0.69 0.79,0.88,0.93,1.1), mean=0.488, stddev=0.167], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.25,-0.08,-0.01,0.07 0.12,0.18,0.25,0.29,0.35 0.39,0.46,0.49,0.63), mean=0.237, stddev=0.0992] }, f_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-3.25472e-05, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.12,0.15,0.24 0.31,0.39,0.50,0.56,0.62 0.67,0.80,0.86,1.0), mean=0.48, stddev=0.134], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.08,0.04,0.07,0.12 0.16,0.20,0.25,0.27,0.31 0.34,0.38,0.40,0.48), mean=0.238, stddev=0.0664] }, c_t_tanh={ self-repair-lower-threshold=0.2, self-repair-scale=1e-05, self-repaired-proportion=-0.144085, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.8,-2.5,-2.1,-1.5 -1.1,-0.72,-0.0005,0.73,1.3 1.8,2.2,2.6,3.1), mean=0.0209, stddev=0.955], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.6,-1.6,-1.3,-0.79 -0.48,-0.07,0.70,1.0,1.4 1.7,1.9,2.1,2.9), mean=0.576, stddev=0.763] }, o_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-3.25472e-05, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.23,-0.06,0.008,0.16 0.25,0.32,0.50,0.59,0.69 0.77,0.88,0.99,1.2), mean=0.467, stddev=0.191], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.23,-0.11,-0.08,0.01 0.08,0.16,0.25,0.28,0.34 0.38,0.43,0.49,0.56), mean=0.222, stddev=0.109] }, m_t_tanh={ self-repair-lower-threshold=0.2, self-repair-scale=1e-05, self-repaired-proportion=-3.25472e-05, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.8,-1.4,-1.3,-1.0 -0.77,-0.40,-0.0009,0.44,0.88 1.1,1.4,1.4,2.0), mean=0.0198, stddev=0.604], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.40,-0.04,0.07,0.24 0.38,0.59,0.87,1.0,1.1 1.2,1.3,1.4,1.5), mean=0.805, stddev=0.296] }
component name=lstm1.cr_trunc type=BackpropTruncationComponent, dim=650, scale=0.85, count=-1.49e+04, recurrence-interval=3, clipping-threshold=30, clipped-proportion=0, zeroing-threshold=15, zeroing-interval=20, zeroed-proportion=0, count-zeroing-boundaries=-2230
component name=lstm1.dropout_mask type=DropoutMaskComponent, output-dim=3, dropout-proportion=0.208264
component name=lstm1.W_rp type=NaturalGradientAffineComponent, input-dim=520, output-dim=260, learning-rate=0.000133432, l2-regularize=0.01, max-change=1.5, linear-params-rms=0.003062, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.03,0.03,0.03 0.04,0.04,0.06,0.09,0.09 0.10,0.10,0.11,0.12), mean=0.0658, stddev=0.0234], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-05,9e-05,0.0001,0.0002 0.0009,0.03,0.05,0.06,0.07 0.07,0.08,0.08,0.09), mean=0.0443, stddev=0.0218], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-08,4e-08,5e-08,6e-08 7e-08,1e-07,3e-07,0.08,0.14 0.17,0.20,0.22,0.29), mean=0.0315, stddev=0.0623], bias-{mean,stddev}=0.0002733,0.002995, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.affine type=NaturalGradientAffineComponent, input-dim=780, output-dim=520, learning-rate=0.000133432, l2-regularize=0.05, max-change=0.75, linear-params-rms=0.003758, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.07,0.07,0.08 0.09,0.09,0.10,0.12,0.12 0.13,0.14,0.15,0.16), mean=0.104, stddev=0.0169], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.03,0.04,0.04 0.04,0.05,0.08,0.11,0.12 0.12,0.13,0.13,0.15), mean=0.0806, stddev=0.0292], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-09,3e-08,3e-08,4e-08 6e-08,9e-08,1e-05,0.12,0.20 0.26,0.31,0.33,0.37), mean=0.054, stddev=0.09], bias-{mean,stddev}=-0.0002546,0.002137, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn3.relu type=RectifiedLinearComponent, dim=520, self-repair-scale=1e-05, count=2.2e+04, self-repaired-proportion=0.00115385, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.48,-0.35,-0.32,-0.25 -0.18,-0.10,0.05,0.20,0.29 0.37,0.45,0.51,0.66), mean=0.0528, stddev=0.186], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.0,-1.4,-1.2,-0.96 -0.63,-0.20,0.55,1.2,1.5 1.8,2.3,2.5,3.1), mean=0.497, stddev=0.845], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0.06,0.08 0.10,0.11,0.14,0.19,0.23 0.30,0.35,0.38,0.53), mean=0.155, stddev=0.0669], oderiv-count=139200
component name=tdnn3.batchnorm type=BatchNormComponent, dim=520, block-dim=520, epsilon=0.001, target-rms=1, count=-1425.38, test-mode=false
component name=tdnn4.affine type=NaturalGradientAffineComponent, input-dim=1560, output-dim=520, learning-rate=0.000133432, l2-regularize=0.05, max-change=0.75, linear-params-rms=0.002771, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.09,0.10,0.10 0.10,0.10,0.11,0.12,0.12 0.12,0.13,0.13,0.13), mean=0.109, stddev=0.00753], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.04,0.05,0.05 0.05,0.06,0.06,0.07,0.07 0.08,0.08,0.08,0.09), mean=0.0626, stddev=0.00888], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.03,0.03,0.03 0.03,0.04,0.07,0.13,0.18 0.22,0.26,0.28,0.31), mean=0.0916, stddev=0.0599], bias-{mean,stddev}=-3.097e-05,0.002992, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn4.relu type=RectifiedLinearComponent, dim=520, self-repair-scale=1e-05, count=5.96e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.05,0.04,0.06,0.09 0.13,0.16,0.21,0.28,0.33 0.36,0.40,0.43,0.56), mean=0.221, stddev=0.0816], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.19,0.22,0.25 0.30,0.35,0.44,0.53,0.58 0.61,0.66,0.69,0.75), mean=0.437, stddev=0.11]
component name=tdnn4.batchnorm type=BatchNormComponent, dim=520, block-dim=520, epsilon=0.001, target-rms=1, count=-1327.08, test-mode=false
component name=lstm2.W_all type=NaturalGradientAffineComponent, input-dim=650, output-dim=2080, learning-rate=0.000133432, l2-regularize=0.01, max-change=1.5, linear-params-rms=0.001561, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-08,3e-07,6e-07,2e-06 6e-06,0.0001,0.03,0.05,0.07 0.08,0.09,0.09,0.13), mean=0.0296, stddev=0.0266], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.02,0.02 0.02,0.03,0.08,0.08,0.09 0.09,0.10,0.10,0.11), mean=0.067, stddev=0.0241], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-08,5e-08,6e-08,9e-08 2e-05,0.01,0.03,0.08,0.12 0.16,0.21,0.24,0.27), mean=0.0494, stddev=0.0512], bias-{mean,stddev}=5.061e-05,0.0007679, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=lstm2.lstm_nonlin type=LstmNonlinearityComponent, input-dim=2603, output-dim=1040, learning-rate=0.000133432, l2-regularize=0.01, max-change=0.75, cell-dim=520, use-dropout=true, w_ic-rms=0.0005534, w_fc-rms=0.000605, w_oc-rms=0.001108, i_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-3.34791e-05, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.17,0.22,0.31 0.36,0.45,0.50,0.57,0.63 0.69,0.75,0.80,0.97), mean=0.502, stddev=0.113], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.09,0.04,0.07,0.12 0.16,0.20,0.25,0.26,0.30 0.32,0.35,0.36,0.42), mean=0.237, stddev=0.0582] }, f_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-3.34791e-05, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.19,0.24,0.31 0.37,0.44,0.50,0.54,0.61 0.66,0.75,0.80,0.96), mean=0.496, stddev=0.104], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.11,0.12,0.16 0.19,0.22,0.25,0.26,0.29 0.31,0.34,0.35,0.41), mean=0.243, stddev=0.044] }, c_t_tanh={ self-repair-lower-threshold=0.2, self-repair-scale=1e-05, self-repaired-proportion=-0.0312846, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.1,-1.4,-1.2,-1.0 -0.79,-0.39,-0.0001,0.36,0.67 1.0,1.3,1.6,2.5), mean=-0.00897, stddev=0.586], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.3,-0.82,-0.70,-0.46 -0.12,0.20,0.96,1.0,1.1 1.5,1.7,1.8,2.4), mean=0.681, stddev=0.567] }, o_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-3.34791e-05, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.01,0.14,0.21,0.29 0.34,0.43,0.50,0.57,0.64 0.73,0.80,0.84,0.99), mean=0.502, stddev=0.127], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.12,-0.004,0.01,0.09 0.14,0.19,0.25,0.26,0.30 0.32,0.35,0.38,0.46), mean=0.228, stddev=0.0696] }, m_t_tanh={ self-repair-lower-threshold=0.2, self-repair-scale=1e-05, self-repaired-proportion=-3.34791e-05, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.6,-0.98,-0.88,-0.74 -0.54,-0.22,0.0003,0.25,0.52 0.72,0.91,0.99,1.4), mean=0.00263, stddev=0.404], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.62,0.18,0.24,0.43 0.51,0.65,0.95,1.0,1.0 1.1,1.2,1.3,1.8), mean=0.848, stddev=0.248] }
component name=lstm2.cr_trunc type=BackpropTruncationComponent, dim=650, scale=0.85, count=-1.3e+04, recurrence-interval=3, clipping-threshold=30, clipped-proportion=0, zeroing-threshold=15, zeroing-interval=20, zeroed-proportion=0, count-zeroing-boundaries=-1956
component name=lstm2.dropout_mask type=DropoutMaskComponent, output-dim=3, dropout-proportion=0.208264
component name=lstm2.W_rp type=NaturalGradientAffineComponent, input-dim=520, output-dim=260, learning-rate=0.000133432, l2-regularize=0.01, max-change=1.5, linear-params-rms=0.002112, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.03,0.03 0.03,0.03,0.04,0.06,0.06 0.07,0.07,0.07,0.08), mean=0.0463, stddev=0.0131], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(5e-05,0.0001,0.0001,0.0002 0.0004,0.001,0.04,0.04,0.05 0.05,0.05,0.05,0.07), mean=0.0277, stddev=0.0198], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-08,3e-08,4e-08,5e-08 7e-08,1e-07,1e-06,0.06,0.10 0.12,0.13,0.14,0.15), mean=0.0243, stddev=0.0416], bias-{mean,stddev}=3.149e-05,0.002286, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.affine type=NaturalGradientAffineComponent, input-dim=780, output-dim=520, learning-rate=0.000133432, l2-regularize=0.05, max-change=0.75, linear-params-rms=0.003151, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.06,0.07,0.07 0.07,0.08,0.09,0.10,0.10 0.11,0.12,0.12,0.13), mean=0.0871, stddev=0.0129], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.04,0.04,0.04 0.04,0.05,0.07,0.09,0.09 0.10,0.10,0.11,0.11), mean=0.0689, stddev=0.0204], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-08,3e-08,4e-08,5e-08 7e-08,1e-07,0.001,0.10,0.16 0.21,0.26,0.28,0.33), mean=0.0488, stddev=0.0732], bias-{mean,stddev}=0.0001462,0.001521, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn5.relu type=RectifiedLinearComponent, dim=520, self-repair-scale=1e-05
component name=tdnn5.batchnorm type=BatchNormComponent, dim=520, block-dim=520, epsilon=0.001, target-rms=1, count=-1228.77, test-mode=false
component name=tdnn6.affine type=NaturalGradientAffineComponent, input-dim=1560, output-dim=520, learning-rate=0.000133432, l2-regularize=0.05, max-change=0.75, linear-params-rms=0.002354, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.05,0.06,0.07 0.08,0.09,0.09,0.10,0.10 0.11,0.11,0.11,0.12), mean=0.0924, stddev=0.0103], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.04,0.04,0.04 0.05,0.05,0.05,0.06,0.06 0.07,0.07,0.07,0.08), mean=0.0532, stddev=0.00696], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.02 0.03,0.03,0.06,0.11,0.15 0.19,0.23,0.24,0.28), mean=0.0764, stddev=0.053], bias-{mean,stddev}=-0.0003871,0.002635, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn6.relu type=RectifiedLinearComponent, dim=520, self-repair-scale=1e-05, count=8.64e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.05,0.04,0.06,0.11 0.15,0.19,0.25,0.30,0.33 0.36,0.41,0.43,0.48), mean=0.244, stddev=0.0768], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.18,0.22,0.26 0.30,0.33,0.41,0.49,0.53 0.56,0.61,0.64,0.70), mean=0.413, stddev=0.0954]
component name=tdnn6.batchnorm type=BatchNormComponent, dim=520, block-dim=520, epsilon=0.001, target-rms=1, count=-1130.47, test-mode=false
component name=lstm3.W_all type=NaturalGradientAffineComponent, input-dim=650, output-dim=2080, learning-rate=0.000133432, l2-regularize=0.01, max-change=1.5, linear-params-rms=0.00178, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.009,0.01,0.01 0.01,0.02,0.03,0.06,0.08 0.09,0.10,0.10,0.13), mean=0.0375, stddev=0.0255], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.04,0.04,0.04,0.05 0.05,0.06,0.07,0.10,0.11 0.12,0.12,0.13,0.14), mean=0.0783, stddev=0.0214], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-07,2e-07,3e-07,9e-06 0.009,0.01,0.03,0.08,0.14 0.20,0.25,0.27,0.32), mean=0.0541, stddev=0.0605], bias-{mean,stddev}=-5.59e-05,0.0004699, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=lstm3.lstm_nonlin type=LstmNonlinearityComponent, input-dim=2603, output-dim=1040, learning-rate=0.000133432, l2-regularize=0.01, max-change=0.75, cell-dim=520, use-dropout=true, w_ic-rms=0.0007836, w_fc-rms=0.0008092, w_oc-rms=0.001981, i_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-3.45815e-05, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.34,-0.11,-0.009,0.15 0.25,0.39,0.58,0.74,0.85 0.94,1.0,1.3,2.3), mean=0.57, stddev=0.256], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.33,-0.06,-0.03,0.05 0.10,0.15,0.22,0.28,0.32 0.35,0.38,0.39,0.43), mean=0.21, stddev=0.0943] }, f_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-3.45815e-05, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.28,0.06,0.09,0.21 0.32,0.44,0.61,0.80,0.91 1.0,1.1,1.2,1.3), mean=0.616, stddev=0.235], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.12,0.006,0.05,0.08 0.11,0.15,0.22,0.29,0.33 0.36,0.39,0.43,0.51), mean=0.22, stddev=0.0875] }, c_t_tanh={ self-repair-lower-threshold=0.2, self-repair-scale=1e-05, self-repaired-proportion=-0.24725, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-12,-4.7,-3.9,-2.9 -2.0,-1.3,0.02,1.7,2.5 3.3,4.1,5.0,8.1), mean=0.135, stddev=1.98], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-4.0,-1.9,-1.7,-1.3 -0.86,-0.43,0.38,1.2,1.5 1.9,2.4,2.7,3.2), mean=0.363, stddev=0.987] }, o_t_sigmoid={ self-repair-lower-threshold=0.05, self-repair-scale=1e-05, self-repaired-proportion=-3.45815e-05, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.64,-0.33,-0.18,-0.05 0.11,0.25,0.55,0.85,1.0 1.1,1.3,1.3,1.5), mean=0.555, stddev=0.36], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.50,-0.10,-0.07,-0.002 0.06,0.12,0.21,0.29,0.34 0.37,0.43,0.45,0.51), mean=0.2, stddev=0.119] }, m_t_tanh={ self-repair-lower-threshold=0.2, self-repair-scale=1e-05, self-repaired-proportion=-3.45815e-05, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-10,-3.8,-2.8,-2.1 -1.6,-1.1,0.12,1.2,1.8 2.5,3.3,3.8,6.1), mean=0.096, stddev=1.49], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.6,-0.82,-0.63,-0.41 -0.17,0.06,0.43,0.88,1.1 1.3,1.4,1.5,2.2), mean=0.455, stddev=0.52] }
component name=lstm3.cr_trunc type=BackpropTruncationComponent, dim=650, scale=0.85, count=-1.1e+04, recurrence-interval=3, clipping-threshold=30, clipped-proportion=0, zeroing-threshold=15, zeroing-interval=20, zeroed-proportion=0, count-zeroing-boundaries=-1651
component name=lstm3.dropout_mask type=DropoutMaskComponent, output-dim=3, dropout-proportion=0.208264
component name=lstm3.W_rp type=NaturalGradientAffineComponent, input-dim=520, output-dim=260, learning-rate=0.000133432, l2-regularize=0.01, max-change=1.5, linear-params-rms=0.002095, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.02 0.02,0.02,0.03,0.06,0.07 0.07,0.07,0.07,0.08), mean=0.0438, stddev=0.019], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.02 0.02,0.03,0.03,0.04,0.04 0.05,0.05,0.05,0.06), mean=0.033, stddev=0.00717], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2e-07,2e-07,2e-07,2e-07 3e-07,6e-07,0.005,0.06,0.09 0.11,0.13,0.14,0.16), mean=0.0277, stddev=0.0389], bias-{mean,stddev}=0.0006118,0.01114, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output.affine type=NaturalGradientAffineComponent, input-dim=260, output-dim=2104, learning-rate=0.000133432, l2-regularize=0.01, max-change=1.5, linear-params-rms=0.00286, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.02,0.02 0.03,0.03,0.04,0.05,0.06 0.07,0.08,0.09,0.18), mean=0.0432, stddev=0.0161], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.07,0.07 0.07,0.08,0.10,0.17,0.18 0.18,0.18,0.19,0.20), mean=0.123, stddev=0.0452], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3e-07,3e-07,3e-07,3e-07 3e-07,7e-07,0.002,0.19,0.26 0.30,0.33,0.35,0.37), mean=0.073, stddev=0.109], bias-{mean,stddev}=-2.103e-10,0.0006427, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output.log-softmax type=LogSoftmaxComponent, dim=2104

LOG (nnet3-show-progress[5.5.0-]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:3.68333 tdnn2.affine:3.41917 lstm1.W_all:2.64736 lstm1.lstm_nonlin:0.0551914 lstm1.W_rp:1.12698 tdnn3.affine:2.39391 tdnn4.affine:2.49625 lstm2.W_all:1.81508 lstm2.lstm_nonlin:0.0314371 lstm2.W_rp:0.777398 tdnn5.affine:2.00727 tdnn6.affine:2.12107 lstm3.W_all:2.06944 lstm3.lstm_nonlin:0.0519581 lstm3.W_rp:0.790907 output.affine:2.11588 ]
LOG (nnet3-show-progress[5.5.0-]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:12.8166 tdnn2.affine:10.5984 lstm1.W_all:20.5367 lstm1.lstm_nonlin:2.33755 lstm1.W_rp:15.2465 tdnn3.affine:8.22791 tdnn4.affine:7.63685 lstm2.W_all:16.8744 lstm2.lstm_nonlin:1.59757 lstm2.W_rp:14.4418 tdnn5.affine:7.79801 tdnn6.affine:7.60412 lstm3.W_all:24.0965 lstm3.lstm_nonlin:3.1599 lstm3.W_rp:34.7843 output.affine:31.9025 ]
LOG (nnet3-show-progress[5.5.0-]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.288129 tdnn2.affine:0.322448 lstm1.W_all:0.12896 lstm1.lstm_nonlin:0.0235168 lstm1.W_rp:0.0739063 tdnn3.affine:0.290582 tdnn4.affine:0.326279 lstm2.W_all:0.107557 lstm2.lstm_nonlin:0.0195628 lstm2.W_rp:0.0538352 tdnn5.affine:0.257024 tdnn6.affine:0.278258 lstm3.W_all:0.0858861 lstm3.lstm_nonlin:0.0164765 lstm3.W_rp:0.0227224 output.affine:0.0662709 ]
LOG (nnet3-show-progress[5.5.0-]:PrintProfile():cu-device.cc:533) -----
[cudevice profile]
Total GPU time:	0s (may involve some double-counting)
-----
# Accounting: time=1 threads=1
# Ended (code 0) at Thu Jul 30 12:23:42 KST 2020, elapsed time 1 seconds
