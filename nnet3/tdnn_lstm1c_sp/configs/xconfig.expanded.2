# This file was created by the command:
# steps/nnet3/xconfig_to_configs.py --xconfig-file exp/nnet3/tdnn_lstm1c_sp/configs/network.xconfig --config-dir exp/nnet3/tdnn_lstm1c_sp/configs/
# It contains the same content as ./xconfig but it was parsed,
# default config values were set, 
# and Descriptors (input=xxx) were normalized.
# See also ./xconfig.expanded.1

input name=ivector dim=100
input name=input dim=40
fixed-affine-layer name=lda affine-transform-file=exp/nnet3/tdnn_lstm1c_sp/configs/lda.mat delay=5 dim=300 input=Append(Offset(input, -2), Offset(input, -1), input, Offset(input, 1), Offset(input, 2), ReplaceIndex(ivector, t, 0)) write-init-config=True
relu-batchnorm-layer name=tdnn1 add-log-stddev=False bias-stddev= bottleneck-dim=-1 dim=520 dropout-per-dim=False dropout-per-dim-continuous=False dropout-proportion=0.5 input=lda l2-regularize=0.05 learning-rate-factor= max-change=0.75 ng-affine-options= ng-linear-options= self-repair-scale=1e-05 target-rms=1.0
relu-batchnorm-layer name=tdnn2 add-log-stddev=False bias-stddev= bottleneck-dim=-1 dim=520 dropout-per-dim=False dropout-per-dim-continuous=False dropout-proportion=0.5 input=Append(Offset(tdnn1, -1), tdnn1, Offset(tdnn1, 1)) l2-regularize=0.05 learning-rate-factor= max-change=0.75 ng-affine-options= ng-linear-options= self-repair-scale=1e-05 target-rms=1.0
fast-lstmp-layer name=lstm1 cell-dim=520 clipping-threshold=30.0 decay-time=20.0 delay=-3 dropout-proportion=0.0 input=tdnn2 l2-regularize=0.01 lstm-nonlinearity-options=" max-change=0.75" ng-affine-options=" max-change=1.5" non-recurrent-projection-dim=130 recurrent-projection-dim=130 zeroing-interval=20 zeroing-threshold=15.0
relu-batchnorm-layer name=tdnn3 add-log-stddev=False bias-stddev= bottleneck-dim=-1 dim=520 dropout-per-dim=False dropout-per-dim-continuous=False dropout-proportion=0.5 input=Append(Offset(lstm1, -3), lstm1, Offset(lstm1, 3)) l2-regularize=0.05 learning-rate-factor= max-change=0.75 ng-affine-options= ng-linear-options= self-repair-scale=1e-05 target-rms=1.0
relu-batchnorm-layer name=tdnn4 add-log-stddev=False bias-stddev= bottleneck-dim=-1 dim=520 dropout-per-dim=False dropout-per-dim-continuous=False dropout-proportion=0.5 input=Append(Offset(tdnn3, -3), tdnn3, Offset(tdnn3, 3)) l2-regularize=0.05 learning-rate-factor= max-change=0.75 ng-affine-options= ng-linear-options= self-repair-scale=1e-05 target-rms=1.0
fast-lstmp-layer name=lstm2 cell-dim=520 clipping-threshold=30.0 decay-time=20.0 delay=-3 dropout-proportion=0.0 input=tdnn4 l2-regularize=0.01 lstm-nonlinearity-options=" max-change=0.75" ng-affine-options=" max-change=1.5" non-recurrent-projection-dim=130 recurrent-projection-dim=130 zeroing-interval=20 zeroing-threshold=15.0
relu-batchnorm-layer name=tdnn5 add-log-stddev=False bias-stddev= bottleneck-dim=-1 dim=520 dropout-per-dim=False dropout-per-dim-continuous=False dropout-proportion=0.5 input=Append(Offset(lstm2, -3), lstm2, Offset(lstm2, 3)) l2-regularize=0.05 learning-rate-factor= max-change=0.75 ng-affine-options= ng-linear-options= self-repair-scale=1e-05 target-rms=1.0
relu-batchnorm-layer name=tdnn6 add-log-stddev=False bias-stddev= bottleneck-dim=-1 dim=520 dropout-per-dim=False dropout-per-dim-continuous=False dropout-proportion=0.5 input=Append(Offset(tdnn5, -3), tdnn5, Offset(tdnn5, 3)) l2-regularize=0.05 learning-rate-factor= max-change=0.75 ng-affine-options= ng-linear-options= self-repair-scale=1e-05 target-rms=1.0
fast-lstmp-layer name=lstm3 cell-dim=520 clipping-threshold=30.0 decay-time=20.0 delay=-3 dropout-proportion=0.0 input=tdnn6 l2-regularize=0.01 lstm-nonlinearity-options=" max-change=0.75" ng-affine-options=" max-change=1.5" non-recurrent-projection-dim=130 recurrent-projection-dim=130 zeroing-interval=20 zeroing-threshold=15.0
output-layer name=output bias-stddev=0.0 bottleneck-dim=-1 dim=2104 include-log-softmax=True input=lstm3 l2-regularize=0.01 learning-rate-factor= max-change=1.5 ng-affine-options= ng-linear-options= objective-type=linear orthonormal-constraint=1.0 output-delay=5 param-stddev=0.0
